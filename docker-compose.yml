version: "3.8"

services:
    ackrep-base:
        build:
            context: ..
            dockerfile: ./ackrep_deployment/dockerfiles/ackrep_core/Dockerfile_base
        image: ackrep_base:latest

    # ---------------------------

    ackrep-core:
        environment:
            DJANGO_MANAGEPY_MIGRATE: "on"
            INIT_RUNNERS: "on"
        build:
            context: ..
            dockerfile: ./ackrep_deployment/dockerfiles/ackrep_core/Dockerfile_core
        image: ackrep_core:latest
        ports:
            - "8000:8000"
        labels:
            - 'traefik.enable=true'
            - 'traefik.http.routers.ackrep-django.rule=Host(`testing.ackrep.org`)'
            - 'traefik.http.routers.ackrep-django.tls=true'
            - 'traefik.http.routers.ackrep-django.tls.certresolver=lets-encrypt'
        volumes:
            - type: "volume"
              source: ackrep-work-volume
              target: /ackrep
              read_only: false
            - type: "volume"
              source: runner-export-volume
              target: /runner
              read_only: false

              # enable this container to start other containers
            - /var/run/docker.sock:/var/run/docker.sock

    # ---------------------------

    ackrep-runner-python3.7:
        # note: in production scenario the runner containers will not be started from the host via `docker-compose ...` but from the ackrep-django container via `docker ... `

        # siehe auch: https://stackoverflow.com/questions/39100483/how-i-can-group-containers-in-docker-compose/47327737
        build:
            context: ..
            dockerfile: ./ackrep_deployment/dockerfiles/runners/ackrep-runner-python3/Dockerfile
        image: ackrep_runner_python3.7:latest
        labels:
            - 'runner.name=ackrep-runner-python3'
        volumes:
            - type: "volume"
              source: ackrep-work-volume
              target: /ackrep
              read_only: false
            - type: "volume"
              source: runner-export-volume
              target: /runner
              read_only: false
        depends_on:
            - ackrep-core

    #traefik:
        #image: traefik:2.1
        #restart: always
        #ports:
            #- '80:80'
            #- '443:443'
        #volumes:
            #- ./traefik:/etc/traefik
            #- /var/run/docker.sock:/var/run/docker.sock:ro


volumes:
    ackrep-work-volume:
    runner-export-volume:
